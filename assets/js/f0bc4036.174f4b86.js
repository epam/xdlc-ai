"use strict";(self.webpackChunkxdlc_ai=self.webpackChunkxdlc_ai||[]).push([[763],{3326:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"type":"mdx","permalink":"/coding-assistants","source":"@site/src/pages/coding-assistants.mdx","title":"Coding Assistants","description":"Coding assistants are AI-driven tools designed to enhance software development by providing code suggestions, generating documentation, and more. These tools utilize both chat and completion models, integrated into popular IDEs like Visual Studio Code and JetBrains. This page presents a leaderboard of various coding assistants,. The benchmark assesses performance across multiple categories, such as code generation, bug fixing, test creation, and more complex tasks like solution migration and DevOps. Regular updates ensure the leaderboard reflects the latest advancements in AI technology. For detailed evaluation criteria, visit this repo.","frontMatter":{"title":"Coding Assistants"},"unlisted":false}');var o=s(4848),i=s(8453),r=s(703);const a={title:"Coding Assistants"},l="Coding Assistants Leaderboard",d={},c=[{value:"Brief Summaries",id:"brief-summaries",level:2},{value:"TBD",id:"tbd",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.p,{children:["Coding assistants are AI-driven tools designed to enhance software development by providing code suggestions, generating documentation, and more. These tools utilize both chat and completion models, integrated into popular IDEs like Visual Studio Code and JetBrains. This page presents a leaderboard of various coding assistants,. The benchmark assesses performance across multiple categories, such as code generation, bug fixing, test creation, and more complex tasks like solution migration and DevOps. Regular updates ensure the leaderboard reflects the latest advancements in AI technology. For detailed evaluation criteria, visit ",(0,o.jsx)(n.a,{href:"https://github.com/epam/AIRUN-Engineering-Benchmark/tree/main",children:"this repo"}),"."]}),"\n",(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"coding-assistants-leaderboard",children:"Coding Assistants Leaderboard"})}),"\n",(0,o.jsx)(r.A,{markdown:"\n  | Category                        | Test Date     | Low Complexity      | Medium Complexity      | Total Score                           |\n  |---------------------------------|---------------|---------------------|------------------------|---------------------------------------|\n  | Cursor + Sonnet 3.5             | Sep 2024      | 97%                 | 88%                    | 96%                                   |\n  | Continue + GPT4o                | Jul 2024      | 93%                 | 90%                    | 92%                                   |\n  | GitHub Copilot + Sonnet 3.5     | Nov 2024      | 90%                 | 76%                    | 88%                                   |\n  | GitHub Copilot + o1-mini        | Nov 2024      | 88%                 | 88%                    | 88%                                   |\n  | GitHub Copilot + GPT4o          | Dec 2024      | 89%                 | 78%                    | 88%                                   |\n  | Gemini                          | Sep 2024      | 87%                 | 68%                    | 83%                                   |\n  | GitHub Copilot + GPT4o          | Aug 2024      | 84%                 | 70%                    | 81%                                   |\n  | Amazon Q                        | Sep 2024      | 82%                 | 76%                    | 81%                                   |\n  | Cursor*                         | Jul 2024      | 81%                 | 78%                    | 80%                                   |\n  | Sourcegraph Cody                | Jul 2024      | 71%                 | 76%                    | 71%                                   |\n  | Continue + Sonnet 3.5           | Sep 2024      | 62%                 | 76%                    | 64%                                   |\n  | CodiumAI                        | Jun 2024      | 49%                 | 63%                    | 52%                                   |\n  "}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"Tested as plugins for VS Code with the exception of Cursor which is an IDE itself (VSCode fork)."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"brief-summaries",children:"Brief Summaries"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cursor + Sonnet 3.5"}),": Separate IDE (private build of VS Code) that has rich and efficient Gen AI capabilities tightly integrated into the IDE user journeys and scoring very high numbers in EPAM Benchmark. Although raises serious concerns being a niche IDE on its own - rarely a developer will code in VS Code, even more rarely - in some niche IDE."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Continue + GPT4o"}),": Open-source plugin for VS Code and JetBrains IDEs that scores the highest numbers in EPAM benchmark in combination with GPT-4o. Very fast and efficient. Is worth considering as alternative to non-agentic Copilot."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Copilot + Sonnet 3.5"}),": As of November 2024 looks like an experimental feature of Copilot as not all tests can pass. Good score overall but slower than o1."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Copilot + o1-mini"}),": Fast and accurate across all usecases. Score a bit lower than the leading combination Cursor + Sonnet 3.5."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Copilot + GPT4o"}),": Copilot + GPT4o is similar to Copilot +o1mini. While Copilot +o1mini generates more code examples and documentation in the chat window, Copilot + GPT4o provides a more concise output. Both are approximately equal in terms of response generation speed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Gemini"}),": Good score overall but lower than Copilot + o1. Very close to Amazon Q."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"GitHub Copilot + GPT4o"}),": Used to be a leader in the score across 3 major vendors but now has been likely overtaken by AWS Amazon Q by a tiny margin. According to the tests the ",(0,o.jsx)(n.strong,{children:"chat is much more capable than code completion"}),". Has got some useful chat commands however does not provide a developer agent like Amazon Q."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Amazon Q"}),": Initially a laggard but recently Amazon likely did huge investments to improve this technology - the quality of answers increased approx. on 10-20% and it provides a unique developer agent - the only major vendor that released this tech - able to solve high-level tasks by generating a plan and creating code for it - it rendered much better results than its competitor Codium AI, although seemingly its dev agent can't solve all tasks. On the negative side it's code completion is much less accurate unlike its chat and responses were slow. Overall the tests score is on the level or even better than Copilot."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Cursor"}),"*: Separate IDE (private build of VS Code) that has rich and efficient Gen AI capabilities tightly integrated into the IDE user journeys and scoring very high numbers in EPAM Benchmark. Although raises serious concerns being a niche IDE on its own - rarely a developer will code in VS Code, even more rarely - in some niche IDE."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Sourcegraph Cody"}),": Niche product - a plugin for VS Code and a standalone website plus an enterprise offering. Scored good marks in EPAM Benchmark although worse than Copilot especially in code completion. Especially good at indexing a project locally and automatically providing necessary embeddings. A separate website has got a Code Search feature that answers questions on open-source repositories. Is worth investigating deeper for cases when a client needs to index a whole private repository locally - likely an expensive Enterprise version is needed for such case."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Continue + Sonnet 3.5"}),": Open-source plugin for VS Code and JetBrains IDEs that scores the highest numbers in EPAM benchmark in combination with Sonnet 3.5. Very fast and efficient. Is worth considering as alternative to non-agentic Copilot."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"CodiumAI"}),": Niche product (VS Code and JetBrains IDEs Plugin) that has many capabilities including agentic features but did not impress overall in any of areas. Benchmark score is low. Can generate not bad unit test suites - but this is on the level of major players in the field. Code reviews functionality is worse by quality then unit tests generation."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"tbd",children:"TBD"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Improve intro"}),"\n",(0,o.jsx)(n.li,{children:"How many tests exactly"}),"\n",(0,o.jsx)(n.li,{children:"Describe columns"}),"\n",(0,o.jsx)(n.li,{children:"Explain completion and chat models, explain categories"}),"\n",(0,o.jsx)(n.li,{children:"Add more tables"}),"\n",(0,o.jsx)(n.li,{children:"Samples of tasks"}),"\n",(0,o.jsx)(n.li,{children:"UX, DevEx? No tool is good if devs don't like it. Many devs will preffer sticking to their IDE (e.g. Rider) rather than move to a new IDE to test a new CoPilot. Cursor and Windosurf IDEs don't have the issue for those ones comfortable with VSCode (as they are forks)"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},703:(e,n,s)=>{s.d(n,{A:()=>r});var t=s(6540),o=s(2885),i=s(4848);const r=e=>{let{markdown:n}=e;const{headers:s,data:r}=(0,t.useMemo)((()=>(e=>{const n=e.trim().split("\n"),s=n[0].split("|").map((e=>e.trim())).filter(Boolean),t=n.slice(2).map((e=>{const n=e.split("|").map((e=>e.trim())).filter(Boolean);return s.reduce(((e,s,t)=>{const o=n[t]?.replace(/<sup>(.*?)<\/sup>/g,"<sup>$1</sup>");return e[s.toLowerCase().replace(/ /g,"")]=o,e}),{})}));return{headers:s,data:t}})(n)),[n]),a=(0,t.useMemo)((()=>s.map((e=>({Header:e+"  ",accessor:e.toLowerCase().replace(/ /g,"")})))),[s]),{getTableProps:l,getTableBodyProps:d,headerGroups:c,rows:h,prepareRow:u}=(0,o.useTable)({columns:a,data:r},o.useSortBy);return(0,i.jsxs)("table",{...l(),children:[(0,i.jsx)("thead",{children:c.map((e=>(0,i.jsx)("tr",{...e.getHeaderGroupProps(),children:e.headers.map((e=>(0,i.jsx)("th",{...e.getHeaderProps(e.getSortByToggleProps()),style:{cursor:"pointer"},children:e.render("Header").replace(/ {2}$/,e.isSorted?e.isSortedDesc?" \u2193":" \u2191":"  ")})))})))}),(0,i.jsx)("tbody",{...d(),children:h.map((e=>(u(e),(0,i.jsx)("tr",{...e.getRowProps(),children:e.cells.map((e=>(0,i.jsx)("td",{...e.getCellProps(),dangerouslySetInnerHTML:{__html:e.value}})))}))))})]})}}}]);